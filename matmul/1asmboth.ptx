//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30672275
// Cuda compilation tools, release 11.5, V11.5.119
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_52
.address_size 64

	// .globl	_Z9matrixMulPiS_S_iii

.visible .entry _Z9matrixMulPiS_S_iii(
	.param .u64 _Z9matrixMulPiS_S_iii_param_0,
	.param .u64 _Z9matrixMulPiS_S_iii_param_1,
	.param .u64 _Z9matrixMulPiS_S_iii_param_2,
	.param .u32 _Z9matrixMulPiS_S_iii_param_3,
	.param .u32 _Z9matrixMulPiS_S_iii_param_4,
	.param .u32 _Z9matrixMulPiS_S_iii_param_5
)
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<30>;


	ld.param.u64 	%rd7, [_Z9matrixMulPiS_S_iii_param_0];
	ld.param.u64 	%rd8, [_Z9matrixMulPiS_S_iii_param_1];
	ld.param.u64 	%rd9, [_Z9matrixMulPiS_S_iii_param_2];
	ld.param.u32 	%r29, [_Z9matrixMulPiS_S_iii_param_3];
	ld.param.u32 	%r27, [_Z9matrixMulPiS_S_iii_param_4];
	ld.param.u32 	%r28, [_Z9matrixMulPiS_S_iii_param_5];
	mov.u32 	%r30, %ntid.y;
	mov.u32 	%r31, %ctaid.y;
	mov.u32 	%r32, %tid.y;
	mad.lo.s32 	%r1, %r31, %r30, %r32;
	mov.u32 	%r33, %ntid.x;
	mov.u32 	%r34, %ctaid.x;
	mov.u32 	%r35, %tid.x;
	mad.lo.s32 	%r2, %r34, %r33, %r35;
	setp.ge.s32 	%p1, %r1, %r29;
	setp.ge.s32 	%p2, %r2, %r28;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB0_9;

	setp.lt.s32 	%p4, %r27, 1;
	mov.u32 	%r71, 0;
	@%p4 bra 	$L__BB0_8;

	mul.lo.s32 	%r3, %r1, %r27;
	and.b32  	%r70, %r27, 3;
	add.s32 	%r40, %r27, -1;
	setp.lt.u32 	%p5, %r40, 3;
	mov.u32 	%r66, 0;
	mov.u32 	%r71, %r66;
	@%p5 bra 	$L__BB0_5;

	sub.s32 	%r64, %r27, %r70;
	mul.wide.s32 	%rd10, %r3, 4;
	add.s64 	%rd28, %rd7, %rd10;
	shl.b32 	%r7, %r28, 2;
	cvt.s64.s32 	%rd20, %r7;
	mov.u32 	%r61, %r66;

$L__BB0_4:
	// begin inline asm
	ld.global.ca.s32 %r44, [%rd28];

	// end inline asm
	add.s32 	%r52, %r61, %r2;
	mul.wide.s32 	%rd19, %r52, 4;
	add.s64 	%rd12, %rd8, %rd19;
	// begin inline asm
	ld.global.L1::no_allocate.s32 %r45, [%rd12];

	// end inline asm
	mad.lo.s32 	%r53, %r45, %r44, %r71;
	add.s64 	%rd13, %rd28, 4;
	// begin inline asm
	ld.global.ca.s32 %r46, [%rd13];

	// end inline asm
	add.s64 	%rd14, %rd12, %rd20;
	// begin inline asm
	ld.global.L1::no_allocate.s32 %r47, [%rd14];

	// end inline asm
	mad.lo.s32 	%r54, %r47, %r46, %r53;
	add.s64 	%rd15, %rd28, 8;
	// begin inline asm
	ld.global.ca.s32 %r48, [%rd15];

	// end inline asm
	add.s64 	%rd16, %rd14, %rd20;
	// begin inline asm
	ld.global.L1::no_allocate.s32 %r49, [%rd16];

	// end inline asm
	mad.lo.s32 	%r55, %r49, %r48, %r54;
	add.s64 	%rd17, %rd28, 12;
	// begin inline asm
	ld.global.ca.s32 %r50, [%rd17];

	// end inline asm
	add.s64 	%rd18, %rd16, %rd20;
	// begin inline asm
	ld.global.L1::no_allocate.s32 %r51, [%rd18];

	// end inline asm
	mad.lo.s32 	%r71, %r51, %r50, %r55;
	add.s32 	%r66, %r66, 4;
	add.s64 	%rd28, %rd28, 16;
	add.s32 	%r61, %r61, %r7;
	add.s32 	%r64, %r64, -4;
	setp.ne.s32 	%p6, %r64, 0;
	@%p6 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p7, %r70, 0;
	@%p7 bra 	$L__BB0_8;

	mul.lo.s32 	%r68, %r66, %r28;
	add.s32 	%r56, %r66, %r3;
	mul.wide.s32 	%rd21, %r56, 4;
	add.s64 	%rd29, %rd7, %rd21;

$L__BB0_7:
	.pragma "nounroll";
	// begin inline asm
	ld.global.ca.s32 %r57, [%rd29];

	// end inline asm
	add.s32 	%r59, %r68, %r2;
	mul.wide.s32 	%rd24, %r59, 4;
	add.s64 	%rd23, %rd8, %rd24;
	// begin inline asm
	ld.global.L1::no_allocate.s32 %r58, [%rd23];

	// end inline asm
	mad.lo.s32 	%r71, %r58, %r57, %r71;
	add.s32 	%r68, %r68, %r28;
	add.s64 	%rd29, %rd29, 4;
	add.s32 	%r70, %r70, -1;
	setp.ne.s32 	%p8, %r70, 0;
	@%p8 bra 	$L__BB0_7;

$L__BB0_8:
	cvta.to.global.u64 	%rd25, %rd9;
	mad.lo.s32 	%r60, %r1, %r28, %r2;
	mul.wide.s32 	%rd26, %r60, 4;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.u32 	[%rd27], %r71;

$L__BB0_9:
	ret;

}

