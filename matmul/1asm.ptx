//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30672275
// Cuda compilation tools, release 11.5, V11.5.119
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_52
.address_size 64

	// .globl	_Z9matrixMulPiS_S_iii

.visible .entry _Z9matrixMulPiS_S_iii(
	.param .u64 _Z9matrixMulPiS_S_iii_param_0,
	.param .u64 _Z9matrixMulPiS_S_iii_param_1,
	.param .u64 _Z9matrixMulPiS_S_iii_param_2,
	.param .u32 _Z9matrixMulPiS_S_iii_param_3,
	.param .u32 _Z9matrixMulPiS_S_iii_param_4,
	.param .u32 _Z9matrixMulPiS_S_iii_param_5
)
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<26>;


	ld.param.u64 	%rd10, [_Z9matrixMulPiS_S_iii_param_0];
	ld.param.u64 	%rd8, [_Z9matrixMulPiS_S_iii_param_1];
	ld.param.u64 	%rd9, [_Z9matrixMulPiS_S_iii_param_2];
	ld.param.u32 	%r28, [_Z9matrixMulPiS_S_iii_param_3];
	ld.param.u32 	%r26, [_Z9matrixMulPiS_S_iii_param_4];
	ld.param.u32 	%r27, [_Z9matrixMulPiS_S_iii_param_5];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %tid.y;
	mad.lo.s32 	%r1, %r30, %r29, %r31;
	mov.u32 	%r32, %ntid.x;
	mov.u32 	%r33, %ctaid.x;
	mov.u32 	%r34, %tid.x;
	mad.lo.s32 	%r2, %r33, %r32, %r34;
	setp.ge.s32 	%p1, %r1, %r28;
	setp.ge.s32 	%p2, %r2, %r27;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB0_9;

	setp.lt.s32 	%p4, %r26, 1;
	mov.u32 	%r71, 0;
	@%p4 bra 	$L__BB0_8;

	and.b32  	%r70, %r26, 3;
	add.s32 	%r39, %r26, -1;
	setp.lt.u32 	%p5, %r39, 3;
	mov.u32 	%r66, 0;
	mov.u32 	%r71, %r66;
	@%p5 bra 	$L__BB0_5;

	sub.s32 	%r64, %r26, %r70;
	mad.lo.s32 	%r43, %r26, %r1, 2;
	mul.wide.s32 	%rd11, %r43, 4;
	add.s64 	%rd24, %rd1, %rd11;
	shl.b32 	%r6, %r27, 2;
	cvt.s64.s32 	%rd17, %r6;
	mov.u32 	%r61, %r66;

$L__BB0_4:
	ld.global.u32 	%r48, [%rd24+-8];
	add.s32 	%r49, %r61, %r2;
	mul.wide.s32 	%rd16, %r49, 4;
	add.s64 	%rd12, %rd8, %rd16;
	// begin inline asm
	ld.global.ca.s32 %r44, [%rd12];

	// end inline asm
	mad.lo.s32 	%r50, %r44, %r48, %r71;
	ld.global.u32 	%r51, [%rd24+-4];
	add.s64 	%rd13, %rd12, %rd17;
	// begin inline asm
	ld.global.ca.s32 %r45, [%rd13];

	// end inline asm
	mad.lo.s32 	%r52, %r45, %r51, %r50;
	ld.global.u32 	%r53, [%rd24];
	add.s64 	%rd14, %rd13, %rd17;
	// begin inline asm
	ld.global.ca.s32 %r46, [%rd14];

	// end inline asm
	mad.lo.s32 	%r54, %r46, %r53, %r52;
	ld.global.u32 	%r55, [%rd24+4];
	add.s64 	%rd15, %rd14, %rd17;
	// begin inline asm
	ld.global.ca.s32 %r47, [%rd15];

	// end inline asm
	mad.lo.s32 	%r71, %r47, %r55, %r54;
	add.s32 	%r66, %r66, 4;
	add.s64 	%rd24, %rd24, 16;
	add.s32 	%r61, %r61, %r6;
	add.s32 	%r64, %r64, -4;
	setp.ne.s32 	%p6, %r64, 0;
	@%p6 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p7, %r70, 0;
	@%p7 bra 	$L__BB0_8;

	mul.lo.s32 	%r68, %r66, %r27;
	mad.lo.s32 	%r56, %r26, %r1, %r66;
	mul.wide.s32 	%rd18, %r56, 4;
	add.s64 	%rd25, %rd1, %rd18;

$L__BB0_7:
	.pragma "nounroll";
	ld.global.u32 	%r58, [%rd25];
	add.s32 	%r59, %r68, %r2;
	mul.wide.s32 	%rd20, %r59, 4;
	add.s64 	%rd19, %rd8, %rd20;
	// begin inline asm
	ld.global.ca.s32 %r57, [%rd19];

	// end inline asm
	mad.lo.s32 	%r71, %r57, %r58, %r71;
	add.s32 	%r68, %r68, %r27;
	add.s64 	%rd25, %rd25, 4;
	add.s32 	%r70, %r70, -1;
	setp.ne.s32 	%p8, %r70, 0;
	@%p8 bra 	$L__BB0_7;

$L__BB0_8:
	cvta.to.global.u64 	%rd21, %rd9;
	mad.lo.s32 	%r60, %r1, %r27, %r2;
	mul.wide.s32 	%rd22, %r60, 4;
	add.s64 	%rd23, %rd21, %rd22;
	st.global.u32 	[%rd23], %r71;

$L__BB0_9:
	ret;

}

